lerna.management {
  stats {
    metrics-reporter {
//
// example
//
//      # Define a reasonable key name.
//      # lerna-management Metrics uses this key name to manage metrics.
//      # This key name can be the same name used by Kamon Modules.
//      /system-metrics/jvm-memory/heap/used {
//        #
//        # Specify a metric name used at Kamon.
//        # For example, the name 'jvm.memory.used' below is defined at Kamon System Metrics Module.
//        # See https://kamon.io/docs/latest/instrumentation/system/jvm-metrics/#:~:text=jvm.memory.used
//        # It is possible to specify our custom metric names. See another example.
//        # Both `name` and `tags` will be used to filter metric values collected by Kamon.
//        #
//        name = "jvm.memory.used"
//        tags {
//          component = "jvm"
//          region    = "heap"
//        }
//      }
//
//      /my-custom-metric-key-name {
//        #
//        # We can specify our custom Kamon metric names.
//        # To record metrics, we would use Kamon's API directly.
//        # See https://kamon.io/docs/latest/core/metrics/#metrics
//        # Once we record metrics with our metric name (`my.custom.kamon-metric-name` in this example),
//        # we can specify the metric name like below.
//        #
//        name = "my.custom.kamon-metric-name"
//        tags {
//          # Declare tags attached to the custom metric
//          # There is no need to declare a tenant id tag even if this metric is multi-tenancy.
//          component = "custom"
//        }
//      }
//
    }
  }
}
